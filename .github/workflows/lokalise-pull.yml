name: Lokalise Pull

on: 
  workflow_call:
    inputs:
      PROJECT_ID:
        required: true
        type: string
      pathPattern:
        required: true
        type: string
    secrets:
      LOKALISE_API_TOKEN:
        required: true
      NAUTILUS_SHARED_SECRET:
        required: true

jobs:
  pull:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.commit.outputs.has_changes }}
      branch_name: ${{ steps.commit.outputs.branch_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Lokalise CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/lokalise/lokalise-cli-2-go/master/install.sh | sh
      - name: Pull
        env: 
          VAR_LOKALISE_API_TOKEN: ${{ secrets.LOKALISE_API_TOKEN }}
          VAR_LOKALISE_PROJECT_ID: ${{ inputs.PROJECT_ID }}
        run: |
             ./bin/lokalise2 --token ${{ env.VAR_LOKALISE_API_TOKEN }} --project-id ${{ env.VAR_LOKALISE_PROJECT_ID }} file download --json-unescaped-slashes --format json --original-filenames=true --directory-prefix=/
      - name: Commit
        id: commit
        env: 
          GH_TOKEN: ${{ github.token }}
          VAR_BRANCH_NAME: 'lokalise/translation-udpate'
        run: |
            git config --global user.name "${GITHUB_ACTOR}"
            git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git checkout -b ${{ env.VAR_BRANCH_NAME }}
            # add newlines remove by lokalised but added by prettier
            git diff --name-only | xargs -I{} sed -i -e '$a\' {}
            git add ${{ inputs.pathPattern }}
            if [[ -z $(git status --untracked-files=no --porcelain) ]]
            then
                echo "No changes"
            else
                git commit -m 'chore: Lokalise translations update'
                git push origin ${{ env.VAR_BRANCH_NAME }} --force

                echo "has_changes=true" >> "$GITHUB_OUTPUT"
                echo "branch_name=${{ env.VAR_BRANCH_NAME }}" >> "$GITHUB_OUTPUT"
            fi

  pr:
    name: Create Pull Request
    needs: pull
    if: ${{ needs.pull.outputs.has_changes == 'true' }}
    uses: Bastion-Technologies/github_workflows/.github/workflows/nautilus-pr.yml@main
    with:
      repo: ${{ github.repository }}
      base: main
      branch: ${{ needs.pull.outputs.branch_name }}
      title: "chore: Lokalise translations"
      body: "Automatically created by Github action"
      ignoreExistingPR: true
    secrets:
      NAUTILUS_SHARED_SECRET: ${{ secrets.NAUTILUS_SHARED_SECRET }}
