name: Build and upload bundles

on:
    workflow_call:
        inputs:
            bundle-path: 
              required: true
              type: string
            region:
                required: true
                type: string
            repo-name:
                required: true
                type: string
            tag-version:
                required: true
                type: string
            notify-slack:
                required: false
                type: boolean
        secrets:
            AWS_DEV_ROLE:
                required: true
            AWS_CICD_ROLE:
                required: true
            AWS_CICD_ACCESS_KEY:
                required: true
            AWS_CICD_SECRET_KEY:
                required: true
            SLACK_WEBHOOK:
                required: false

jobs:
    deploy:
        strategy:
          matrix:
            include:
              - environment: dev
                build_secret: AWS_DEV_ROLE
        defaults:
            run:
                working-directory: ./cdk
        name: Build
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup NodeJS
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"
                  registry-url: https://npm.pkg.github.com/
            - name: Prerequisite Installation
              run: npm install -g aws-cdk esbuild

            - name: install dependencies
              run: |
                  if [ -f "install.sh" ]
                    then
                        echo "install.sh script found! running it";
                        chmod 700 install.sh
                        ./install.sh
                    else
                       echo "install.sh script NOT found! running `npm ci`";
                       cd ..;
                       npm ci;
                  fi
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Configure AWS credentials for build
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_CICD_ACCESS_KEY }}
                  aws-secret-access-key: ${{ secrets.AWS_CICD_SECRET_KEY }}
                  aws-region: ${{ inputs.region }}
                  role-to-assume: ${{ secrets[matrix.build_secret] }}
                  role-duration-seconds: 1800
                  role-session-name: GitActionDeploymentSession
            - name: Build
              run: |
                  chmod 700 build.sh
                  ./build.sh ${{ matrix.environment }};
              env:
                  GH_PACKAGE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Configure AWS credentials for upload
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_CICD_ACCESS_KEY }}
                  aws-secret-access-key: ${{ secrets.AWS_CICD_SECRET_KEY }}
                  aws-region: ${{ inputs.region }}
                  role-to-assume: ${{ secrets.AWS_CICD_ROLE }}
                  role-duration-seconds: 1800
                  role-session-name: GitActionDeploymentSession
            - name: Upload
              run: |
                echo $(pwd);
                aws s3 cp ${{ inputs.bundle-path }} s3://bastion-bundles/test/${{ inputs.repo-name }}/${{ inputs.version }} --recursive
            # - name: Slack Notification
            #   if: "${{ failure() }}"
            #   uses: rtCamp/action-slack-notify@v2
            #   env:
            #     SLACK_CHANNEL: github-cis
            #     SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
            #     SLACK_ICON: https://github.com/rtCamp.png?size=48
            #     SLACK_MESSAGE: ":spongebobbing:"
            #     SLACK_TITLE: ":spongebobbing: ${{ github.repository }} :rocket:"
            #     SLACK_USERNAME: "Bob"
            #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
